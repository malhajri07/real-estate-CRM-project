generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id            String    @id
  firstNameAr   String?
  lastNameAr    String?
  roleType      String?
  accountIdType String?
  accountNumber String    @unique
  parentAccount String?
  usernameEn    String?
  mobile        String?
  createDate    DateTime?
  expiryDate    DateTime?
  status        String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
}

model agent_profiles {
  id                String         @id
  userId            String         @unique
  organizationId    String?
  licenseNo         String         @unique
  licenseValidTo    DateTime
  territories       String
  isIndividualAgent Boolean        @default(false)
  status            AgentStatus    @default(PENDING_VERIFICATION)
  specialties       String
  experience        Int?
  bio               String?
  avatar            String?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime
  organizations     organizations? @relation(fields: [organizationId], references: [id])
  users             users          @relation(fields: [userId], references: [id])

  @@index([licenseNo])
  @@index([organizationId])
  @@index([status])
  @@index([userId])
}

model audit_logs {
  id         String   @id
  userId     String
  action     String
  entity     String
  entityId   String
  beforeJson String?
  afterJson  String?
  ipAddress  String?
  userAgent  String?
  createdAt  DateTime @default(now())
  users      users    @relation(fields: [userId], references: [id])

  @@index([createdAt])
  @@index([entityId])
  @@index([entity])
  @@index([userId])
}

model buyer_requests {
  id                 String             @id
  createdByUserId    String
  city               String
  type               String
  minBedrooms        Int?
  maxBedrooms        Int?
  minPrice           Decimal?
  maxPrice           Decimal?
  contactPreferences String
  status             BuyerRequestStatus @default(OPEN)
  maskedContact      String
  fullContactJson    String
  multiAgentAllowed  Boolean            @default(false)
  notes              String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime
  users              users              @relation(fields: [createdByUserId], references: [id])
  claims             claims[]
  leads              leads[]

  @@index([city])
  @@index([createdByUserId])
  @@index([maxPrice])
  @@index([status])
  @@index([type])
}

model cities {
  id              Int         @id
  regionId        Int
  nameAr          String
  nameEn          String
  centerLatitude  Decimal?
  centerLongitude Decimal?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime
  regions         regions     @relation(fields: [regionId], references: [id])
  districts       districts[]

  @@index([nameAr])
  @@index([nameEn])
  @@index([regionId])
}

model claims {
  id             String         @id
  agentId        String
  buyerRequestId String
  claimedAt      DateTime       @default(now())
  expiresAt      DateTime
  status         ClaimStatus    @default(ACTIVE)
  notes          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  users          users          @relation(fields: [agentId], references: [id])
  buyer_requests buyer_requests @relation(fields: [buyerRequestId], references: [id])

  @@index([agentId])
  @@index([buyerRequestId])
  @@index([expiresAt])
  @@index([status])
}

model contact_logs {
  id          String         @id
  leadId      String
  agentId     String
  note        String
  channel     ContactChannel
  contactedAt DateTime       @default(now())
  createdAt   DateTime       @default(now())
  users       users          @relation(fields: [agentId], references: [id])
  leads       leads          @relation(fields: [leadId], references: [id])

  @@index([agentId])
  @@index([contactedAt])
  @@index([leadId])
}

model districts {
  id        BigInt   @id
  regionId  Int
  cityId    Int
  nameAr    String
  nameEn    String
  boundary  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime
  cities    cities   @relation(fields: [cityId], references: [id])
  regions   regions  @relation(fields: [regionId], references: [id])

  @@index([cityId])
  @@index([nameAr])
  @@index([nameEn])
  @@index([regionId])
}

model file_assets {
  id             String         @id
  ownerUserId    String?
  organizationId String?
  entity         String
  entityId       String
  url            String
  mime           String
  size           Int
  filename       String
  createdAt      DateTime       @default(now())
  organizations  organizations? @relation(fields: [organizationId], references: [id])
  users          users?         @relation(fields: [ownerUserId], references: [id])

  @@index([entityId])
  @@index([entity])
  @@index([organizationId])
  @@index([ownerUserId])
}

model landing_page_contact_info {
  id                   String               @id
  type                 String
  label                String
  value                String
  icon                 String
  order                Int                  @default(0)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  landingPageContentId String
  landing_page_content landing_page_content @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model landing_page_content {
  id                        String                      @id
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime
  loadingText               String                      @default("جار تحميل المحتوى...")
  heroWelcomeText           String                      @default("مرحباً بك في")
  heroTitle                 String                      @default("منصة عقاراتي للوساطة العقارية")
  heroSubtitle              String                      @default("منصة شاملة لإدارة العقارات والوساطة العقارية مع أدوات تسويق متقدمة")
  heroButton                String                      @default("ابدأ رحلتك المجانية")
  heroLoginButton           String                      @default("تسجيل الدخول")
  heroDashboardTitle        String                      @default("منصة عقاراتي - لوحة التحكم")
  featuresTitle             String                      @default("لماذا تختار منصة عقاراتي؟")
  featuresDescription       String                      @default("عندما يجتمع التحديث بالاحترافية، تكون منصة عقاراتي هي الخيار الأمثل لإدارة عقاراتك بكفاءة")
  solutionsTitle            String                      @default("حلول شاملة لإدارة العقارات")
  solutionsDescription      String                      @default("أدوات متكاملة تساعدك في إدارة جميع جوانب أعمالك العقارية")
  statsTitle                String                      @default("أرقامنا تتحدث")
  pricingTitle              String                      @default("خطط الأسعار")
  pricingSubtitle           String                      @default("اختر الخطة المناسبة لك")
  contactTitle              String                      @default("تواصل معنا")
  contactDescription        String                      @default("نحن هنا لمساعدتك في رحلتك العقارية")
  footerDescription         String                      @default("منصة عقاراتي - الحل الشامل لإدارة العقارات والوساطة العقارية")
  footerCopyright           String                      @default("© 2024 منصة عقاراتي. جميع الحقوق محفوظة.")
  landing_page_contact_info landing_page_contact_info[]
  landing_page_features     landing_page_features[]
  landing_page_footer_links landing_page_footer_links[]
  landing_page_hero_metrics landing_page_hero_metrics[]
  landing_page_navigation   landing_page_navigation[]
  landing_page_solutions    landing_page_solutions[]
  landing_page_stats        landing_page_stats[]
}

model landing_page_features {
  id                   String               @id
  title                String
  description          String
  icon                 String
  order                Int                  @default(0)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  landingPageContentId String
  landing_page_content landing_page_content @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model landing_page_footer_links {
  id                   String               @id
  text                 String
  url                  String
  category             String
  order                Int                  @default(0)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  landingPageContentId String
  landing_page_content landing_page_content @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model landing_page_hero_metrics {
  id                   String               @id
  value                String
  label                String
  color                String
  order                Int                  @default(0)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  landingPageContentId String
  landing_page_content landing_page_content @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model landing_page_navigation {
  id                   String               @id
  text                 String
  url                  String
  order                Int                  @default(0)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  landingPageContentId String
  landing_page_content landing_page_content @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model landing_page_solution_features {
  id                     String                 @id
  text                   String
  icon                   String
  order                  Int                    @default(0)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime
  solutionId             String
  landing_page_solutions landing_page_solutions @relation(fields: [solutionId], references: [id], onDelete: Cascade)
}

model landing_page_solutions {
  id                             String                           @id
  title                          String
  description                    String
  icon                           String
  order                          Int                              @default(0)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime
  landingPageContentId           String
  landing_page_solution_features landing_page_solution_features[]
  landing_page_content           landing_page_content             @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model landing_page_stats {
  id                   String               @id
  number               String
  label                String
  suffix               String?
  order                Int                  @default(0)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  landingPageContentId String
  landing_page_content landing_page_content @relation(fields: [landingPageContentId], references: [id], onDelete: Cascade)
}

model leads {
  id                 String              @id
  agentId            String
  buyerRequestId     String?
  sellerSubmissionId String?
  status             LeadStatus          @default(NEW)
  notes              String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime
  contact_logs       contact_logs[]
  users              users               @relation(fields: [agentId], references: [id])
  buyer_requests     buyer_requests?     @relation(fields: [buyerRequestId], references: [id])
  seller_submissions seller_submissions? @relation(fields: [sellerSubmissionId], references: [id])

  @@index([agentId])
  @@index([buyerRequestId])
  @@index([sellerSubmissionId])
  @@index([status])
}

model listings {
  id             String         @id
  propertyId     String
  agentId        String
  organizationId String?
  listingType    ListingType
  exclusive      Boolean        @default(false)
  publishedAt    DateTime?
  status         ListingStatus  @default(ACTIVE)
  price          Decimal?
  description    String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  users          users          @relation(fields: [agentId], references: [id])
  organizations  organizations? @relation(fields: [organizationId], references: [id])
  properties     properties     @relation(fields: [propertyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listings_propertyid_fkey")

  @@index([agentId])
  @@index([listingType])
  @@index([organizationId])
  @@index([propertyId])
  @@index([status])
}

model organizations {
  id             String             @id
  legalName      String
  tradeName      String
  licenseNo      String             @unique
  status         OrganizationStatus @default(PENDING_VERIFICATION)
  address        String?
  phone          String?
  email          String?
  website        String?
  createdAt      DateTime           @default(now())
  updatedAt      DateTime
  agent_profiles agent_profiles[]
  file_assets    file_assets[]
  listings       listings[]
  users          users[]

  @@index([licenseNo])
  @@index([status])
}

model pricing_plan_features {
  id            String        @id
  text          String
  included      Boolean       @default(true)
  order         Int           @default(0)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  pricingPlanId String
  pricing_plans pricing_plans @relation(fields: [pricingPlanId], references: [id], onDelete: Cascade)
}

model pricing_plans {
  id                    String                  @id
  name                  String
  price                 Float
  period                String                  @default("monthly")
  isPopular             Boolean                 @default(false)
  description           String
  buttonText            String                  @default("ابدأ الآن")
  order                 Int                     @default(0)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  pricing_plan_features pricing_plan_features[]
}

model properties {
  id             String          @id
  agentId        String?
  organizationId String?
  title          String?
  description    String?
  type           String?
  category       String?
  city           String?
  district       String?
  address        String?
  bedrooms       Int?
  bathrooms      Decimal?
  areaSqm        Decimal?
  price          Decimal?
  status         PropertyStatus?
  visibility     String?
  latitude       Decimal?
  longitude      Decimal?
  features       String?
  photos         String?
  createdAt      DateTime?
  updatedAt      DateTime?
  cityId         Int?
  districtId     BigInt?
  regionId       Int?
  listings       listings[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model properties_seeker {
  seeker_num             BigInt   @id @default(autoincrement())
  first_name             String
  last_name              String
  mobile_number          String
  email                  String
  nationality            String
  age                    Int
  monthly_income         Decimal
  gender                 String
  type_of_property       String
  type_of_contract       String
  number_of_rooms        Int
  number_of_bathrooms    Int
  number_of_living_rooms Int
  house_direction        String?
  budget_size            Decimal
  has_maid_room          Boolean  @default(false)
  has_driver_room        Boolean? @default(false)
  kitchen_installed      Boolean? @default(false)
  has_elevator           Boolean? @default(false)
  parking_available      Boolean? @default(false)
  city                   String?
  district               String?
  region                 String?
  other_comments         String?
  created_at             DateTime @default(now())
  updated_at             DateTime @default(now())
  Sqm                    BigInt?
  seeker_id              String?  @unique @default(dbgenerated("('S-'::text || lpad((seeker_num)::text, 11, '0'::text))")) @db.Char(13)

  @@unique([email, mobile_number])
  @@index([city, district])
  @@index([city])
  @@index([region])
  @@index([type_of_property, type_of_contract])
}

model regions {
  id              Int         @id
  code            String?
  nameAr          String
  nameEn          String
  population      Int?
  centerLatitude  Decimal?
  centerLongitude Decimal?
  boundary        Json?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime
  cities          cities[]
  districts       districts[]

  @@index([nameAr])
  @@index([nameEn])
}

model seller_submissions {
  id                  String                 @id
  createdByUserId     String
  city                String
  type                String
  bedrooms            Int?
  priceExpectation    Decimal?
  exclusivePreference Boolean                @default(false)
  status              SellerSubmissionStatus @default(OPEN)
  maskedContact       String
  fullContactJson     String
  notes               String?
  createdAt           DateTime               @default(now())
  updatedAt           DateTime
  leads               leads[]
  users               users                  @relation(fields: [createdByUserId], references: [id])

  @@index([city])
  @@index([createdByUserId])
  @@index([status])
  @@index([type])
}

model users {
  id                 String               @id
  username           String               @unique
  email              String?              @unique
  phone              String?              @unique
  firstName          String
  lastName           String
  passwordHash       String
  roles              String
  organizationId     String?
  isActive           Boolean              @default(true)
  lastLoginAt        DateTime?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  agent_profiles     agent_profiles?
  audit_logs         audit_logs[]
  buyer_requests     buyer_requests[]
  claims             claims[]
  contact_logs       contact_logs[]
  file_assets        file_assets[]
  leads              leads[]
  listings           listings[]
  seller_submissions seller_submissions[]
  organizations      organizations?       @relation(fields: [organizationId], references: [id])

  @@index([email])
  @@index([isActive])
  @@index([organizationId])
}

enum AgentStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_VERIFICATION
}

enum BuyerRequestStatus {
  OPEN
  CLAIMED
  CLOSED
  PAUSED
}

enum ClaimStatus {
  ACTIVE
  EXPIRED
  RELEASED
  CONVERTED
}

enum ContactChannel {
  PHONE
  EMAIL
  WHATSAPP
  SMS
  IN_PERSON
}

enum LeadStatus {
  NEW
  IN_PROGRESS
  WON
  LOST
}

enum ListingStatus {
  ACTIVE
  INACTIVE
  SOLD
  RENTED
  PENDING_APPROVAL
}

enum ListingType {
  RENT
  SALE
}

enum OrganizationStatus {
  ACTIVE
  SUSPENDED
  PENDING_VERIFICATION
}

enum PropertyStatus {
  ACTIVE
  INACTIVE
  SOLD
  RENTED
  PENDING_APPROVAL
}

enum SellerSubmissionStatus {
  OPEN
  IN_PROGRESS
  CLOSED
  PAUSED
}

enum UserRole {
  WEBSITE_ADMIN
  CORP_OWNER
  CORP_AGENT
  INDIV_AGENT
  SELLER
  BUYER
}

// CMS Tables for Landing Page Management
model LandingSection {
  id             String   @id @default(uuid())
  slug           String   @unique
  title          String
  subtitle       String?
  layoutVariant  String   @default("custom")
  theme          Json?
  orderIndex     Int      @default(0)
  visible        Boolean  @default(true)
  status         String   @default("draft")
  draftJson      Json?
  publishedJson  Json?
  version        Int      @default(1)
  updatedBy      String?
  publishedBy    String?
  updatedAt      DateTime @updatedAt
  publishedAt    DateTime?
  createdAt      DateTime @default(now())
  cards          LandingCard[]

  @@index([status])
  @@index([orderIndex])
}

model LandingCard {
  id            String          @id @default(uuid())
  sectionId     String
  orderIndex    Int             @default(0)
  title         String?
  body          String?
  mediaUrl      String?
  icon          String?
  ctaLabel      String?
  ctaHref       String?
  visible       Boolean         @default(true)
  status        String          @default("draft")
  draftJson     Json?
  publishedJson Json?
  version       Int             @default(1)
  updatedBy     String?
  publishedBy   String?
  updatedAt     DateTime        @updatedAt
  publishedAt   DateTime?
  createdAt     DateTime        @default(now())
  section       LandingSection  @relation(fields: [sectionId], references: [id], onDelete: Cascade)

  @@index([sectionId])
  @@index([status])
  @@index([orderIndex])
}

model LandingAuditLog {
  id          BigInt   @id @default(autoincrement())
  actor       String
  entityType  String
  entityId    String
  action      String
  fromVersion Int?
  toVersion   Int?
  createdAt   DateTime @default(now())

  @@index([entityType, entityId])
}

model LandingVersion {
  id         BigInt   @id @default(autoincrement())
  entityType String
  entityId   String
  version    Int
  snapshot   Json
  createdBy  String?
  createdAt  DateTime @default(now())

  @@index([entityType, entityId])
  @@unique([entityType, entityId, version])
}
